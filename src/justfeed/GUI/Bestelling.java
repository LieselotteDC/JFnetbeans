/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package justfeed.GUI;

import Database.*;
import Logica.*;
import java.awt.Color;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liedcost
 */
public class Bestelling extends javax.swing.JFrame {

    private static final Bestelling bestelling = new Bestelling();
    public static JFrame myCaller;
    public Database d = new Database();
    public DefaultTableModel model = new DefaultTableModel();
    int postcode = 0;
    String gemeente = null;
    java.sql.Date leveringsdatum = null;

    public Klant actief = LoginKlant.getInstance().getActief();
    ArrayList<Orderverwerking> besteldeProducten = new ArrayList<>();
    ArrayList<Review> voorlopigeReviews = new ArrayList<>(); //doorgeven 
    public ArrayList<Menu> berekendeMenus = new ArrayList<>(); // deze arraylist moet naar volgende scherm overgedragen worden
    public Order orderZonderKorting = new Order(); // ook meegegeven worden
    public Order orderMetKorting=new Order();

    //String[] columNames = new String[5];
    //Object data [][] = null;
    /**
     * Creates new form Bestelling
     */
    public Bestelling() {
        initComponents();
        txtProduct.setEnabled(false);
        combobox.setEnabled(false);
    }

    public static Bestelling getInstance() {
        return bestelling;
    }
    //private String[] columnNames = {"productID", "naam", "type", "eenheidsprijs", "hoeveelheid"};
    //DefaultTableModel table = new DefaultTableModel(columnNames, 0);

    /*public void addRow(String productID, String naam, String type, String eenheidsprijs, String hoeveelheid)
     {
     Object [] row = new Object [5];
     row[0] = productID;
     row[1] = naam;
     row[2] = type;
     row[3] = eenheidsprijs;
     row[4] = hoeveelheid;
     //table.addRow(row);
     }*/
    public static Bestelling getInstance(Profielklant caller) {
        myCaller = caller;
        return bestelling;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        btnBestellingPlaatsen = new javax.swing.JButton();
        btnToevoegenAanBestelling = new javax.swing.JButton();
        txtProductNaam = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();
        txtEenheidsPrijs = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtProductID = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblKeuzes = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBestelling = new javax.swing.JTable();
        spnrHoeveelheid = new javax.swing.JSpinner();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSuggesties = new javax.swing.JTable();
        combobox = new javax.swing.JComboBox();
        rbtnCategorie = new javax.swing.JRadioButton();
        btnZoek = new javax.swing.JButton();
        rbtnTakeAway = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPostcode = new javax.swing.JTextField();
        txtGemeente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTakeAwayNaam = new javax.swing.JTextField();
        txtVestigingsID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        calendarLeveringsdatum = new com.toedter.calendar.JCalendar();
        jLabel13 = new javax.swing.JLabel();
        rbtnProduct = new javax.swing.JRadioButton();
        txtProduct = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblHotItems = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Bestelling plaatsen");

        btnBestellingPlaatsen.setBackground(new java.awt.Color(0, 0, 0));
        btnBestellingPlaatsen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBestellingPlaatsen.setForeground(new java.awt.Color(255, 255, 255));
        btnBestellingPlaatsen.setText("Bestelling plaatsen");
        btnBestellingPlaatsen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBestellingPlaatsenActionPerformed(evt);
            }
        });

        btnToevoegenAanBestelling.setBackground(new java.awt.Color(0, 0, 0));
        btnToevoegenAanBestelling.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnToevoegenAanBestelling.setForeground(new java.awt.Color(255, 255, 255));
        btnToevoegenAanBestelling.setText("Voeg toe aan mijn bestelling");
        btnToevoegenAanBestelling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToevoegenAanBestellingActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Naam");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Type");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Eenheidsprijs");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Hoeveelheid");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("ProductID");

        tblKeuzes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblKeuzes.getTableHeader().setReorderingAllowed(false);
        tblKeuzes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKeuzesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblKeuzes);

        tblBestelling.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "productID", "productnaam", "type", "eenheidsprijs", "hoeveelheid", "take-awaynaam", "vestigingsID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBestelling.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblBestelling);

        tblSuggesties.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tblSuggesties.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblSuggesties.getTableHeader().setReorderingAllowed(false);
        tblSuggesties.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSuggestiesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblSuggesties);

        buttonGroup1.add(rbtnCategorie);
        rbtnCategorie.setText("categorie");
        rbtnCategorie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbtnCategorieMouseClicked(evt);
            }
        });

        btnZoek.setBackground(new java.awt.Color(0, 0, 0));
        btnZoek.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnZoek.setForeground(new java.awt.Color(255, 255, 255));
        btnZoek.setText("Zoek");
        btnZoek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoekActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnTakeAway);
        rbtnTakeAway.setText("take-away");
        rbtnTakeAway.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbtnTakeAwayMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Postcode waar moet worden  geleverd:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Gemeente waar moet worden geleverd:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Take-awaynaam");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("VestigingsID");

        jLabel11.setText("Suggesties:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Zoeken op:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Kies de gewenste leverdatum:");

        buttonGroup1.add(rbtnProduct);
        rbtnProduct.setText("product");
        rbtnProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbtnProductMouseClicked(evt);
            }
        });

        tblHotItems.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tblHotItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblHotItems.getTableHeader().setReorderingAllowed(false);
        tblHotItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHotItemsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblHotItems);

        jLabel14.setText("U bent mogelijk ook geïnteresseerd in....");

        jLabel15.setText("Overzicht van uw bestelling:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 51, 51));
        jLabel16.setText("alvorens producten toe te voegen.");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 51, 51));
        jLabel17.setText("Gelieve eerst de correcte orderdatum te selecteren");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel8)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel12)
                                                    .addGap(18, 18, 18)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(rbtnProduct)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(rbtnTakeAway)
                                                            .addGap(8, 8, 8)
                                                            .addComponent(rbtnCategorie)))))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtGemeente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(combobox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPostcode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(28, 28, 28)
                                            .addComponent(btnZoek))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel11)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 0, Short.MAX_VALUE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBestellingPlaatsen)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtEenheidsPrijs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                        .addComponent(txtType, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtProductNaam, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtProductID, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtVestigingsID, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(calendarLeveringsdatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnToevoegenAanBestelling)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtTakeAwayNaam, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel17))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(spnrHoeveelheid, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(62, 62, 62)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPostcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtGemeente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTakeAwayNaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtVestigingsID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtProductNaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEenheidsPrijs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(spnrHoeveelheid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnToevoegenAanBestelling)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(calendarLeveringsdatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBestellingPlaatsen)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnCategorie)
                            .addComponent(rbtnTakeAway)
                            .addComponent(jLabel12)
                            .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnProduct)
                            .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnZoek))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBestellingPlaatsenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBestellingPlaatsenActionPerformed
        Orderverwerking o = new Orderverwerking();
        Menu hulp = new Menu();
        double totaalprijs = 0;

        for (Take_Away ta : d.getAlleTakeaways()) {
            for (Vestiging v : d.getAlleVestigingen(ta.getNaam())) {
                ArrayList<Orderverwerking> productenPerVestiging = o.verdelingBesteldeProducten(besteldeProducten, v.getTakeawayNaam(), v.getVestigingsID());
                if (!(productenPerVestiging.isEmpty())) {
                    Menu menu = new Menu();
                    menu.berekenMenuprijs(productenPerVestiging);
                    berekendeMenus.add(menu);
                }
            }
        }

        totaalprijs = hulp.berekenOrderprijs(berekendeMenus);
        orderZonderKorting.setTotaalPrijs(totaalprijs);
        orderMetKorting.setTotaalPrijs(totaalprijs);
        leveringsdatum = new java.sql.Date(calendarLeveringsdatum.getDate().getTime());
        for (Orderverwerking orderver : this.besteldeProducten) {
            Review rev = new Review(actief.getLogin(), orderver.getProductID(), leveringsdatum);
            voorlopigeReviews.add(rev);
        }

        BestellingOverzicht bestellingOverzicht = BestellingOverzicht.getInstance(bestelling);
        bestellingOverzicht.pack();
        bestelling.hide();
        bestellingOverzicht.show();
        bestellingOverzicht.setLocationRelativeTo(null);
        DefaultTableModel model2 = (DefaultTableModel) tblKeuzes.getModel();
        model2.setRowCount(0);
        DefaultTableModel model3 = (DefaultTableModel) tblBestelling.getModel();
        model3.setRowCount(0);
    }//GEN-LAST:event_btnBestellingPlaatsenActionPerformed

    private void btnToevoegenAanBestellingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToevoegenAanBestellingActionPerformed
        /*columNames = new String[] {"productID","naam","type","eenheidsprijs","hoeveelheid"};
         data = new Object[1][5];
         int i = 0;
         data [i][0] = txtProductID.getText();
         data [i][1] = txtProductNaam.getText();
         data [i][2] = txtType.getText();
         data [i][3] = txtEenheidsPrijs.getText();
         data [i][4] = txtHoeveelheid.getText();
         tblBestelling.setModel(new DefaultTableModel(data, columNames));
         i++;*/
        //
        String productNaam = txtProductNaam.getText();
        String type = txtType.getText();
        //Double eenheidsprijs = Double.parseDouble(txtEenheidsPrijs.getText());

        if (txtProductID.getText().isEmpty() || productNaam.isEmpty() || type.isEmpty()
                || txtEenheidsPrijs.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Gelieve een product te selecteren.");
        } else {
            if (Integer.parseInt(spnrHoeveelheid.getValue().toString()) > 0) {
                //DefaultTableModel 
                model = (DefaultTableModel) tblBestelling.getModel();
                model.addRow(new Object[]{txtProductID.getText(), txtProductNaam.getText(),
                    txtType.getText(), txtEenheidsPrijs.getText(), spnrHoeveelheid.getValue(), txtTakeAwayNaam.getText(), txtVestigingsID.getText()});
                int productID = Integer.parseInt(txtProductID.getText());
                double eenheidsprijs = Double.parseDouble(txtEenheidsPrijs.getText());
                String hoeveelheid1 = spnrHoeveelheid.getValue().toString();
                int hoeveelheid = Integer.parseInt(hoeveelheid1);
                String takeAwayNaam = txtTakeAwayNaam.getText();
                String vestigingsID = txtVestigingsID.getText();
                leveringsdatum = new java.sql.Date(calendarLeveringsdatum.getDate().getTime());
                Orderverwerking p = new Orderverwerking(productID, productNaam, type, eenheidsprijs, hoeveelheid, takeAwayNaam, vestigingsID);
                orderZonderKorting.setDatum(leveringsdatum);
                orderZonderKorting.setLogin(actief.getLogin());
                orderMetKorting.setDatum(leveringsdatum);
                orderMetKorting.setLogin(actief.getLogin());
                besteldeProducten.add(p);

            } else {
                JOptionPane.showMessageDialog(null, "Gelieve een geldige hoeveelheid in te voeren.");
            }
        }
    }//GEN-LAST:event_btnToevoegenAanBestellingActionPerformed


    private void tblKeuzesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKeuzesMouseClicked
        int row = tblKeuzes.getSelectedRow();
        String tabel_click = (tblKeuzes.getModel().getValueAt(row, 0).toString());
        String sql = "select * from tbl_product where productID = '" + tabel_click + "' ";
        txtProductID.setText(d.bestelFormulier(sql, "productID"));
        txtProductID.setEnabled(false);
        txtProductNaam.setText(d.bestelFormulier(sql, "naam"));
        txtProductNaam.setEnabled(false);
        txtType.setText(d.bestelFormulier(sql, "type"));
        txtType.setEnabled(false);
        txtEenheidsPrijs.setText(d.bestelFormulier(sql, "eenheidsprijs"));
        txtEenheidsPrijs.setEnabled(false);
        spnrHoeveelheid.setValue(0);
        String tabel_click2 = (tblKeuzes.getModel().getValueAt(row, 5).toString());
        String sql2 = "select * from tbl_vestigingen where vestigingsID = '" + tabel_click2 + "' ";
        txtTakeAwayNaam.setText(d.bestelFormulier(sql2, "naam"));
        txtTakeAwayNaam.setEnabled(false);
        txtVestigingsID.setText(d.bestelFormulier(sql2, "vestigingsID"));
        txtVestigingsID.setEnabled(false);
    }//GEN-LAST:event_tblKeuzesMouseClicked

    private void rbtnCategorieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnCategorieMouseClicked
        combobox.setEnabled(true);
        txtProduct.setEnabled(false);
        DefaultComboBoxModel c = d.initialiseerCombobox("SELECT DISTINCT categorie FROM tbl_soort;", "categorie");
        combobox.setModel(c);
    }//GEN-LAST:event_rbtnCategorieMouseClicked

    private void btnZoekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoekActionPerformed
        gemeente = txtGemeente.getText();
        if (txtPostcode.getText().isEmpty() || txtGemeente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Gelieve een postcode en gemeente toe te voegen.");
        } else if (!rbtnTakeAway.isSelected() && !rbtnCategorie.isSelected() && !rbtnProduct.isSelected()) {
            JOptionPane.showMessageDialog(null, "Gelieve te selecteren waarop u wil zoeken.");
        } else {
            postcode = Integer.parseInt(txtPostcode.getText());
            if (d.getPlaatsnummer(gemeente, postcode) == 0) {
                JOptionPane.showMessageDialog(null, "De ingevoerde postcode en gemeente voor uw levering stemmen niet overeen. Probeer opnieuw.");
                txtPostcode.setText("");
                txtGemeente.setText("");
            } else {
                int plaatsnummer = d.getPlaatsnummer(gemeente, postcode);
                DefaultTableModel v = d.naarTabel("SELECT P.productID,P.naam,P.type,P.eenheidsprijs,P.takeawaynaam,V.vestigingsID FROM tbl_product P JOIN tbl_vestigingen V ON (P.takeawaynaam=V.naam) JOIN tbl_leveringsregio L ON ((V.naam=L.naam) and (V.vestigingsID=L.vestigingsID)) JOIN tbl_awardHotitem A ON (A.productID=P.productID) WHERE (L.leveringsgebied= " + plaatsnummer + ")");
                tblHotItems.setModel(v);
                DefaultTableModel u = d.naarTabel("SELECT P.productID,P.naam,P.type,P.eenheidsprijs,P.takeawaynaam,V.vestigingsID FROM tbl_product P JOIN tbl_vestigingen V ON (P.takeawaynaam=V.naam) JOIN tbl_leveringsregio L ON ((V.naam=L.naam) and (V.vestigingsID=L.vestigingsID))"
                        + "JOIN tbl_review R ON (R.productID=P.productID) WHERE (L.leveringsgebied= " + plaatsnummer + ") "
                        + "AND ((SELECT DISTINCT R.productID FROM tbl_review R JOIN tbl_product P ON R.productID = P.productID WHERE (R.score>4))=P.productID)");
                tblSuggesties.setModel(u);
                if (rbtnCategorie.isSelected()) {
                    String gekozenCategorie = combobox.getSelectedItem().toString();
                    DefaultTableModel t = d.naarTabel("SELECT P.productID,P.naam,P.type,P.eenheidsprijs,P.takeawaynaam,V.vestigingsID FROM tbl_product P JOIN tbl_vestigingen V ON (P.takeawaynaam=V.naam) JOIN tbl_leveringsregio L ON ((V.naam=L.naam) and (V.vestigingsID=L.vestigingsID)) JOIN tbl_soort S ON (S.naam=V.naam) WHERE (L.leveringsgebied= " + plaatsnummer + ") AND (S.categorie='" + gekozenCategorie + "')");
                    tblKeuzes.setModel(t);
                } else if (rbtnTakeAway.isSelected()) {
                    String gekozenTakeAway = combobox.getSelectedItem().toString();
                    DefaultTableModel q = d.naarTabel("SELECT P.productID,P.naam,P.type,P.eenheidsprijs,P.takeawaynaam,V.vestigingsID FROM tbl_product P JOIN tbl_vestigingen V ON (P.takeawaynaam=V.naam) JOIN tbl_leveringsregio L ON ((V.naam=L.naam) and (V.vestigingsID=L.vestigingsID)) WHERE (P.takeawaynaam = '" + gekozenTakeAway + "') AND (L.leveringsgebied= " + plaatsnummer + ")");
                    tblKeuzes.setModel(q);
                } else if (rbtnProduct.isSelected()) {
                    String product = txtProduct.getText().trim();
                    if (!d.productProductnaamBestaat(product)) {
                        JOptionPane.showMessageDialog(null, "Sorry, Just-Feed biedt dit product momenteel niet aan. Probeer opnieuw.");
                        txtProduct.setText("");
                        txtProduct.requestFocus();
                    } else {
                        String gekozenProduct = txtProduct.getText();
                        DefaultTableModel r = d.naarTabel("SELECT P.productID,P.naam,P.type,P.eenheidsprijs,P.takeawaynaam,V.vestigingsID FROM tbl_product P JOIN tbl_vestigingen V ON (P.takeawaynaam=V.naam) JOIN tbl_leveringsregio L ON ((V.naam=L.naam) and (V.vestigingsID=L.vestigingsID)) WHERE (P.naam= '" + gekozenProduct + "') AND (L.leveringsgebied= " + plaatsnummer + ")");
                        tblKeuzes.setModel(r);
                    }
                }

            }
        }
    }//GEN-LAST:event_btnZoekActionPerformed

    private void rbtnTakeAwayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnTakeAwayMouseClicked
        combobox.setEnabled(true);
        txtProduct.setEnabled(false);
        DefaultComboBoxModel f = d.initialiseerCombobox("SELECT naam FROM tbl_takeaway;", "naam");
        combobox.setModel(f);
    }//GEN-LAST:event_rbtnTakeAwayMouseClicked

    private void tblSuggestiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSuggestiesMouseClicked
        int row = tblSuggesties.getSelectedRow();
        String tabel_click = (tblSuggesties.getModel().getValueAt(row, 0).toString());
        String sql = "select * from tbl_product where productID = '" + tabel_click + "' ";
        txtProductID.setText(d.bestelFormulier(sql, "productID"));
        txtProductID.setEnabled(false);
        txtProductNaam.setText(d.bestelFormulier(sql, "naam"));
        txtProductNaam.setEnabled(false);
        txtType.setText(d.bestelFormulier(sql, "type"));
        txtType.setEnabled(false);
        txtEenheidsPrijs.setText(d.bestelFormulier(sql, "eenheidsprijs"));
        txtEenheidsPrijs.setEnabled(false);
        spnrHoeveelheid.setValue(0);
        String tabel_click2 = (tblKeuzes.getModel().getValueAt(row, 5).toString());
        String sql2 = "select * from tbl_vestigingen where vestigingsID = '" + tabel_click2 + "' ";
        txtTakeAwayNaam.setText(d.bestelFormulier(sql2, "naam"));
        txtTakeAwayNaam.setEnabled(false);
        txtVestigingsID.setText(d.bestelFormulier(sql2, "vestigingsID"));
        txtVestigingsID.setEnabled(false);
    }//GEN-LAST:event_tblSuggestiesMouseClicked

    private void rbtnProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtnProductMouseClicked
        txtProduct.setEnabled(true);
        combobox.setEnabled(false);
    }//GEN-LAST:event_rbtnProductMouseClicked

    private void tblHotItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHotItemsMouseClicked
        int row = tblHotItems.getSelectedRow();
        String tabel_click = (tblHotItems.getModel().getValueAt(row, 0).toString());
        String sql = "select * from tbl_product where productID = '" + tabel_click + "' ";
        txtProductID.setText(d.bestelFormulier(sql, "productID"));
        txtProductID.setEnabled(false);
        txtProductNaam.setText(d.bestelFormulier(sql, "naam"));
        txtProductNaam.setEnabled(false);
        txtType.setText(d.bestelFormulier(sql, "type"));
        txtType.setEnabled(false);
        txtEenheidsPrijs.setText(d.bestelFormulier(sql, "eenheidsprijs"));
        txtEenheidsPrijs.setEnabled(false);
        spnrHoeveelheid.setValue(0);
        String tabel_click2 = (tblKeuzes.getModel().getValueAt(row, 5).toString());
        String sql2 = "select * from tbl_vestigingen where vestigingsID = '" + tabel_click2 + "' ";
        txtTakeAwayNaam.setText(d.bestelFormulier(sql2, "naam"));
        txtTakeAwayNaam.setEnabled(false);
        txtVestigingsID.setText(d.bestelFormulier(sql2, "vestigingsID"));
        txtVestigingsID.setEnabled(false);
    }//GEN-LAST:event_tblHotItemsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bestelling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bestelling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bestelling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bestelling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bestelling().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBestellingPlaatsen;
    private javax.swing.JButton btnToevoegenAanBestelling;
    private javax.swing.JButton btnZoek;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JCalendar calendarLeveringsdatum;
    private javax.swing.JComboBox combobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JRadioButton rbtnCategorie;
    private javax.swing.JRadioButton rbtnProduct;
    private javax.swing.JRadioButton rbtnTakeAway;
    private javax.swing.JSpinner spnrHoeveelheid;
    private javax.swing.JTable tblBestelling;
    private javax.swing.JTable tblHotItems;
    private javax.swing.JTable tblKeuzes;
    private javax.swing.JTable tblSuggesties;
    private javax.swing.JTextField txtEenheidsPrijs;
    private javax.swing.JTextField txtGemeente;
    private javax.swing.JTextField txtPostcode;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtProductNaam;
    private javax.swing.JTextField txtTakeAwayNaam;
    private javax.swing.JTextField txtType;
    private javax.swing.JTextField txtVestigingsID;
    // End of variables declaration//GEN-END:variables

    public ArrayList<Menu> getBerekendeMenus() {
        return berekendeMenus;
    }

    public Order getOrderZonderKorting() {
        return orderZonderKorting;
    }

    public void setBerekendeMenus(ArrayList<Menu> berekendeMenus) {
        this.berekendeMenus = berekendeMenus;
    }

    public void setOrderZonderKorting(Order orderZonderKorting) {
        this.orderZonderKorting = orderZonderKorting;
    }

    public DefaultTableModel getModel() {
        return model;
    }

    public Date getLeveringsdatum() {
        return leveringsdatum;
    }

    public void setLeveringsdatum(Date leveringsdatum) {
        this.leveringsdatum = leveringsdatum;
    }

    public int getPostcode() {
        return postcode;
    }

    public void setPostcode(int postcode) {
        this.postcode = postcode;
    }

    public String getGemeente() {
        return gemeente;
    }

    public void setGemeente(String gemeente) {
        this.gemeente = gemeente;
    }

    public ArrayList<Review> getVoorlopigeReviews() {
        return voorlopigeReviews;
    }

    public void setVoorlopigeReviews(ArrayList<Review> voorlopigeReviews) {
        this.voorlopigeReviews = voorlopigeReviews;
    }

    public ArrayList<Orderverwerking> getBesteldeProducten() {
        return besteldeProducten;
    }

    public void setBesteldeProducten(ArrayList<Orderverwerking> besteldeProducten) {
        this.besteldeProducten = besteldeProducten;
    }

    public Order getOrderMetKorting() {
        return orderMetKorting;
    }

    public void setOrderMetKorting(Order orderMetKorting) {
        this.orderMetKorting = orderMetKorting;
    }

}
