/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package justfeed.GUI;

import Database.*;
import Logica.*;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author UGent
 */
public class BestellingKortingscode extends javax.swing.JFrame {

    public ArrayList<Menu> berekendeMenus = Bestelling.getInstance().getBerekendeMenus();
    public ArrayList<Menu> berekendeMenusInclKorting = berekendeMenus;
    public ArrayList<HulpKorting> hulpKorting = new ArrayList<>();
    public ArrayList<Korting> reedsIngevoerdeKortingen = new ArrayList<>();
    private static final BestellingKortingscode bestellingKortingscode = new BestellingKortingscode();
    //doorgeven: leveringsdatum, reedsIngevoerdeKortingen, berekendeMenusInclKorting, orderMetKorting
    java.sql.Date leveringsdatum = Bestelling.getInstance().getLeveringsdatum();
    public static JFrame myCaller;
    public Order orderZonderKorting = BestellingAfleveradres.getInstance().getOrderZonderKorting();
    public Order orderMetKorting = BestellingAfleveradres.getInstance().getOrderMetKorting();
    public Menu testMenu = new Menu();
    public Database d = new Database();
    public Klant actief = LoginKlant.getInstance().getActief();
    Korting testKorting = new Korting();

    public BestellingKortingscode() {
        initComponents();
    }

    public static BestellingKortingscode getInstance(BestellingAfleveradres bestellingAfleveradres) {
        myCaller = bestellingAfleveradres;
        return bestellingKortingscode;
    }

    public static BestellingKortingscode getInstance() {
        return bestellingKortingscode;
    }

    public static BestellingKortingscode getInstance(BestellingKortingscode bestellingKortingscode) {
        myCaller = bestellingKortingscode;
        return bestellingKortingscode;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtKortingsCode = new javax.swing.JTextField();
        btnNogCode = new javax.swing.JButton();
        btnAfrekenen = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboboxType = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Voer hier uw eventuele kortingscodes in:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Unieke kortingscode:");

        txtKortingsCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKortingsCodeActionPerformed(evt);
            }
        });

        btnNogCode.setBackground(new java.awt.Color(0, 0, 0));
        btnNogCode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNogCode.setForeground(new java.awt.Color(255, 255, 255));
        btnNogCode.setText("Nog een code toevoegen");
        btnNogCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNogCodeActionPerformed(evt);
            }
        });

        btnAfrekenen.setBackground(new java.awt.Color(0, 0, 0));
        btnAfrekenen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAfrekenen.setForeground(new java.awt.Color(255, 255, 255));
        btnAfrekenen.setText("Afrekenen");
        btnAfrekenen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfrekenenActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Type kortingscode:");

        comboboxType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Registratiekorting", "Reviewkorting", "Just Feed Boss korting", "Takeaway Boss korting", "Unieke actie korting: eenmalig", "Unieke actie korting: periodiek" }));
        comboboxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNogCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAfrekenen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                .addComponent(txtKortingsCode, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboboxType, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(comboboxType, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKortingsCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNogCode, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAfrekenen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAfrekenenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfrekenenActionPerformed

        String uniekeKortingsCode = comboboxType.getSelectedItem().toString();
        String kortingscode = txtKortingsCode.getText();
        if (uniekeKortingsCode.isEmpty() || txtKortingsCode.getText().isEmpty()) {
            int reply = JOptionPane.showConfirmDialog(null, "Bent u zeker dat u klaar bent met het invoeren van kortingscodes?", "Geen kortingscodes ingevoerd", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                BestellingFactuur factuur = BestellingFactuur.getInstance(bestellingKortingscode);
                factuur.pack();
                bestellingKortingscode.hide();
                factuur.show();
                factuur.setLocationRelativeTo(null);
            } else {
                JOptionPane.showMessageDialog(null, "Gelieve een type te selecteren en uw code(s) in te voeren.");
                if (uniekeKortingsCode.isEmpty()) {
                    comboboxType.requestFocus();
                } else if (txtKortingsCode.getText().isEmpty()) {
                    txtKortingsCode.requestFocus();
                }
            }
        } else {
            if (!(txtKortingsCode.getText().length() == 10)) {
                JOptionPane.showMessageDialog(null, "De ingevoerde kortingscode bestaat niet uit 10 cijfers. Probeer opnieuw. ");
                txtKortingsCode.setText("");
                txtKortingsCode.requestFocus();
            } else {
                if (uniekeKortingsCode.equals("Registratiekorting")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingRegistratieBestaat(code, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingRegistratieGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        RegistratieKorting test = d.getKortingRegistratie(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else if (uniekeKortingsCode.equals("Reviewkorting")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!(d.kortingReviewBestaat(code, actief))) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingReviewGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        ReviewKorting test = d.getKortingReview(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else if (uniekeKortingsCode.equals("Just Feed Boss korting")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingJustfeedBossBestaat(code, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingJustfeedBossGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        JustFeedBoss test = d.getKortingJustfeedBoss(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else if (uniekeKortingsCode.equals("Takeaway Boss korting")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingTakeawayBossBestaat(code, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingTakeawayBossGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        TakeawayBoss test = d.getKortingTakeawayBoss(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else if (uniekeKortingsCode.equals("Unieke actie korting: eenmalig")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingEenmaligBruikbaarBijMenu(code, berekendeMenusInclKorting, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingEenmaligUniekGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        UniekeActieEenmalig test = d.getKortingEenmaligUniek(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingPeriodeBruikbaarBijMenu(code, berekendeMenusInclKorting, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingEenmaligPeriodeGeldig(code, leveringsdatum)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        UniekeActiePeriode test = d.getKortingEenmaligPeriode(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                }

                testMenu.toepassenDefinitieveKortingen(reedsIngevoerdeKortingen, orderZonderKorting, orderMetKorting, actief, berekendeMenusInclKorting, hulpKorting);

                BestellingFactuur factuur = BestellingFactuur.getInstance(bestellingKortingscode);
                factuur.pack();
                bestellingKortingscode.hide();
                factuur.show();
                factuur.setLocationRelativeTo(null);
                txtKortingsCode.setText("");
                comboboxType.setSelectedItem(null);
            }
        }
    }//GEN-LAST:event_btnAfrekenenActionPerformed

    private void btnNogCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNogCodeActionPerformed
        String uniekeKortingsCode = comboboxType.getSelectedItem().toString();
        String kortingscode = txtKortingsCode.getText();
        if (uniekeKortingsCode.isEmpty() || txtKortingsCode.getText().isEmpty()) {
            int reply = JOptionPane.showConfirmDialog(null, "Bent u zeker dat u klaar bent met het invoeren van kortingscodes?", "Geen kortingscodes ingevoerd", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                BestellingFactuur factuur = BestellingFactuur.getInstance(bestellingKortingscode);
                factuur.pack();
                bestellingKortingscode.hide();
                factuur.show();
                factuur.setLocationRelativeTo(null);
            } else {
                JOptionPane.showMessageDialog(null, "Gelieve een type te selecteren en uw code(s) in te voeren.");
                if (uniekeKortingsCode.isEmpty()) {
                    comboboxType.requestFocus();
                } else if (txtKortingsCode.getText().isEmpty()) {
                    txtKortingsCode.requestFocus();
                }
            }
        } else {
            if (!(txtKortingsCode.getText().length() == 10)) {
                JOptionPane.showMessageDialog(null, "De ingevoerde kortingscode bestaat niet uit 10 cijfers. Probeer opnieuw. ");
                txtKortingsCode.setText("");
                txtKortingsCode.requestFocus();
            } else {
                if (uniekeKortingsCode.equals("Registratiekorting")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingRegistratieBestaat(code, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingRegistratieGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        RegistratieKorting test = d.getKortingRegistratie(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else if (uniekeKortingsCode.equals("Reviewkorting")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!(d.kortingReviewBestaat(code, actief))) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingReviewGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        ReviewKorting test = d.getKortingReview(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else if (uniekeKortingsCode.equals("Just Feed Boss korting")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingJustfeedBossBestaat(code, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingJustfeedBossGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        JustFeedBoss test = d.getKortingJustfeedBoss(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else if (uniekeKortingsCode.equals("Takeaway Boss korting")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingTakeawayBossBestaat(code, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingTakeawayBossGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        TakeawayBoss test = d.getKortingTakeawayBoss(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else if (uniekeKortingsCode.equals("Unieke actie korting: eenmalig")) {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingEenmaligBruikbaarBijMenu(code, berekendeMenusInclKorting, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingEenmaligUniekGeldig(code)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        UniekeActieEenmalig test = d.getKortingEenmaligUniek(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                } else {
                    int code = Integer.parseInt(txtKortingsCode.getText());
                    if (!d.kortingPeriodeBruikbaarBijMenu(code, berekendeMenusInclKorting, actief)) {
                        JOptionPane.showMessageDialog(null, "Sorry, U heeft geen recht op deze kortingscode.");
                    } else if (!d.kortingEenmaligPeriodeGeldig(code, leveringsdatum)) {
                        JOptionPane.showMessageDialog(null, "Deze kortingscode is niet meer geldig.");
                    } else {
                        UniekeActiePeriode test = d.getKortingEenmaligPeriode(code);
                        if (testKorting.bevatTypeKorting(test, reedsIngevoerdeKortingen)) {
                            JOptionPane.showMessageDialog(null, "U heeft dit type kortingscode reeds toegevoegd.");
                        } else {
                            reedsIngevoerdeKortingen.add(test);
                        }
                    }
                }
                txtKortingsCode.setText("");
                comboboxType.setSelectedItem(null);
            }
        }
    }//GEN-LAST:event_btnNogCodeActionPerformed

    private void txtKortingsCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKortingsCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKortingsCodeActionPerformed

    private void comboboxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BestellingKortingscode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BestellingKortingscode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BestellingKortingscode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BestellingKortingscode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BestellingKortingscode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAfrekenen;
    private javax.swing.JButton btnNogCode;
    private javax.swing.JComboBox comboboxType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtKortingsCode;
    // End of variables declaration//GEN-END:variables
    public ArrayList<Menu> getBerekendeMenusInclKorting() {
        return berekendeMenusInclKorting;
    }

    public void setBerekendeMenusInclKorting(ArrayList<Menu> berekendeMenusInclKorting) {
        this.berekendeMenusInclKorting = berekendeMenusInclKorting;
    }

    public Order getOrderMetKorting() {
        return orderMetKorting;
    }

    public void setOrderMetKorting(Order orderMetKorting) {
        this.orderMetKorting = orderMetKorting;
    }

    public ArrayList<HulpKorting> getHulpKorting() {
        return hulpKorting;
    }

    public void setHulpKorting(ArrayList<HulpKorting> hulpKorting) {
        this.hulpKorting = hulpKorting;
    }

    public Order getOrderZonderKorting() {
        return orderZonderKorting;
    }

    public void setOrderZonderKorting(Order orderZonderKorting) {
        this.orderZonderKorting = orderZonderKorting;
    }

    public ArrayList<Korting> getReedsIngevoerdeKortingen() {
        return reedsIngevoerdeKortingen;
    }

    public void setReedsIngevoerdeKortingen(ArrayList<Korting> reedsIngevoerdeKortingen) {
        this.reedsIngevoerdeKortingen = reedsIngevoerdeKortingen;
    }

    public ArrayList<Menu> getBerekendeMenus() {
        return berekendeMenus;
    }

    public void setBerekendeMenus(ArrayList<Menu> berekendeMenus) {
        this.berekendeMenus = berekendeMenus;
    }

}
